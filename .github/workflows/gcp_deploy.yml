name: 'Build and Deploy to GKE'

#Trigger workflow when Tests are run
on:
    workflow_run:
      workflows:
        - Run Tests
      types:
        - completed

env:
    GCLOUD_PROJECT: ${{ secrets.PROJECT_ID }}
    GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
    GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
    GKE_ZONE: ${{ secrets.GKE_ZONE }}
    DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
    REPOSITORY: ${{ secrets.REPOSITORY }}
    IMAGE: ${{ secrets.IMAGE }}
    WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_SECRET }}

jobs:
    setup-build-publish-deploy:
      # Make sure tests are successful before we deploy
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        name: 'Setup, Build, Publish, and Deploy'
        runs-on: 'ubuntu-latest'
        environment: 'production'

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:
            - name: 'Checkout'
              uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

            # Configure Workload Identity Federation and generate an access token.
            - id: 'auth'
              name: 'Authenticate to Google Cloud'
              uses: 'google-github-actions/auth@f112390a2df9932162083945e46d439060d66ec2' # google-github-actions/auth@v2
              with:
                  workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

            # Authenticate Docker to Google Cloud Artifact Registry
            - name: 'Docker Auth'
              uses: 'docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567' # docker/login-action@v3
              with:
                  username: 'oauth2accesstoken'
                  password: '${{ steps.auth.outputs.auth_token }}'
                  registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

            # Get the GKE credentials so we can deploy to the cluster
            - name: 'Set up GKE credentials'
              uses: 'google-github-actions/get-gke-credentials@6051de21ad50fbb1767bc93c11357a49082ad116' # google-github-actions/get-gke-credentials@v2
              with:
                  cluster_name: '${{ env.GKE_CLUSTER }}'
                  location: '${{ env.GKE_ZONE }}'
                  project_id: '${{ env.GCLOUD_PROJECT }}'

            # Build the Docker image
            - name: 'Build and push Docker container'
              run: |-
                  DOCKER_TAG="${GAR_LOCATION}-docker.pkg.dev/${{ env.GCLOUD_PROJECT }}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA}"

                  docker build \
                    --tag "${DOCKER_TAG}" \
                    --build-arg GITHUB_SHA="${GITHUB_SHA}" \
                    --build-arg GITHUB_REF="${GITHUB_REF}" \
                    .

                  docker push "${DOCKER_TAG}"

            # Set up kustomize
            - name: 'Set up Kustomize'
              run: |-
                  cd k8s
                  curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.3/kustomize_v5.4.3_linux_amd64.tar.gz
                  tar -xzf kustomize
                  chmod u+x ./kustomize

            # Deploy the Docker image to the GKE cluster
            - name: 'Deploy to GKE'
              run: |-
                  # replacing the image name in the k8s template
                  cd k8s
                  ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/${{env.GCLOUD_PROJECT}}/$REPOSITORY/$IMAGE:$GITHUB_SHA
                  ./kustomize build . | kubectl apply -f -
                  kubectl rollout status deployment/$DEPLOYMENT_NAME
                  kubectl get services -o wide
